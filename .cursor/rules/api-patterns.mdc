---
description: 
globs: 
alwaysApply: false
---
# API 연동 패턴 가이드

## 🔐 인증 시스템

### JWT 토큰 관리
- [auth.ts](mdc:src/utils/auth.ts)에서 토큰 관리 함수들 제공
- `getAuthHeaders()` - Authorization 헤더 자동 생성
- `setTokens()`, `getAccessToken()`, `getRefreshToken()` - 토큰 저장/조회
- `clearAuth()` - 로그아웃 시 토큰 삭제

### API 호출 패턴
모든 API 호출 시 다음 패턴을 따르세요:

```typescript
import { getAuthHeaders } from "../utils/auth";

const apiFunction = async (data) => {
  const authHeaders = getAuthHeaders();
  
  const response = await axios.post("/api/endpoint", data, {
    headers: {
      ...authHeaders,
      'Content-Type': 'application/json'
    }
  });
  
  return response.data;
};
```

## 🌐 API 엔드포인트

### 인증 API
- `POST /api/auth/login` - 로그인
- `POST /api/auth/register` - 회원가입  
- `POST /api/auth/reissue` - 토큰 갱신

### Tmap API
- [TmapClickAPI.ts](mdc:src/api/TmapClickAPI.ts) - 대중교통 경로 검색
- 헤더에 Authorization 필수
- 쿼리 파라미터로 좌표 및 선호도 전송

## 🔄 프록시 설정
CORS 문제 해결을 위해 [vite.config.ts](mdc:vite.config.ts)에서 프록시 설정:
- `/api/*` → `http://3.37.136.115:8080/*`

## 📝 환경변수 사용법
Vite 환경에서는 `import.meta.env` 사용:
```typescript
const apiUrl = import.meta.env.VITE_API_URL;
```
